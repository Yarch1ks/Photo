/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/crc-32";
exports.ids = ["vendor-chunks/crc-32"];
exports.modules = {

/***/ "(rsc)/./node_modules/crc-32/crc32.js":
/*!**************************************!*\
  !*** ./node_modules/crc-32/crc32.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("/*! crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */ /* vim: set ts=2: */ /*exported CRC32 */ var CRC32;\n(function(factory) {\n    /*jshint ignore:start */ /*eslint-disable */ if (typeof DO_NOT_EXPORT_CRC === \"undefined\") {\n        if (true) {\n            factory(exports);\n        } else {}\n    } else {\n        factory(CRC32 = {});\n    }\n/*eslint-enable */ /*jshint ignore:end */ })(function(CRC32) {\n    CRC32.version = \"1.2.2\";\n    /*global Int32Array */ function signed_crc_table() {\n        var c = 0, table = new Array(256);\n        for(var n = 0; n != 256; ++n){\n            c = n;\n            c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n            c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n            c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n            c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n            c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n            c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n            c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n            c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n            table[n] = c;\n        }\n        return typeof Int32Array !== \"undefined\" ? new Int32Array(table) : table;\n    }\n    var T0 = signed_crc_table();\n    function slice_by_16_tables(T) {\n        var c = 0, v = 0, n = 0, table = typeof Int32Array !== \"undefined\" ? new Int32Array(4096) : new Array(4096);\n        for(n = 0; n != 256; ++n)table[n] = T[n];\n        for(n = 0; n != 256; ++n){\n            v = T[n];\n            for(c = 256 + n; c < 4096; c += 256)v = table[c] = v >>> 8 ^ T[v & 0xFF];\n        }\n        var out = [];\n        for(n = 1; n != 16; ++n)out[n - 1] = typeof Int32Array !== \"undefined\" ? table.subarray(n * 256, n * 256 + 256) : table.slice(n * 256, n * 256 + 256);\n        return out;\n    }\n    var TT = slice_by_16_tables(T0);\n    var T1 = TT[0], T2 = TT[1], T3 = TT[2], T4 = TT[3], T5 = TT[4];\n    var T6 = TT[5], T7 = TT[6], T8 = TT[7], T9 = TT[8], Ta = TT[9];\n    var Tb = TT[10], Tc = TT[11], Td = TT[12], Te = TT[13], Tf = TT[14];\n    function crc32_bstr(bstr, seed) {\n        var C = seed ^ -1;\n        for(var i = 0, L = bstr.length; i < L;)C = C >>> 8 ^ T0[(C ^ bstr.charCodeAt(i++)) & 0xFF];\n        return ~C;\n    }\n    function crc32_buf(B, seed) {\n        var C = seed ^ -1, L = B.length - 15, i = 0;\n        for(; i < L;)C = Tf[B[i++] ^ C & 255] ^ Te[B[i++] ^ C >> 8 & 255] ^ Td[B[i++] ^ C >> 16 & 255] ^ Tc[B[i++] ^ C >>> 24] ^ Tb[B[i++]] ^ Ta[B[i++]] ^ T9[B[i++]] ^ T8[B[i++]] ^ T7[B[i++]] ^ T6[B[i++]] ^ T5[B[i++]] ^ T4[B[i++]] ^ T3[B[i++]] ^ T2[B[i++]] ^ T1[B[i++]] ^ T0[B[i++]];\n        L += 15;\n        while(i < L)C = C >>> 8 ^ T0[(C ^ B[i++]) & 0xFF];\n        return ~C;\n    }\n    function crc32_str(str, seed) {\n        var C = seed ^ -1;\n        for(var i = 0, L = str.length, c = 0, d = 0; i < L;){\n            c = str.charCodeAt(i++);\n            if (c < 0x80) {\n                C = C >>> 8 ^ T0[(C ^ c) & 0xFF];\n            } else if (c < 0x800) {\n                C = C >>> 8 ^ T0[(C ^ (192 | c >> 6 & 31)) & 0xFF];\n                C = C >>> 8 ^ T0[(C ^ (128 | c & 63)) & 0xFF];\n            } else if (c >= 0xD800 && c < 0xE000) {\n                c = (c & 1023) + 64;\n                d = str.charCodeAt(i++) & 1023;\n                C = C >>> 8 ^ T0[(C ^ (240 | c >> 8 & 7)) & 0xFF];\n                C = C >>> 8 ^ T0[(C ^ (128 | c >> 2 & 63)) & 0xFF];\n                C = C >>> 8 ^ T0[(C ^ (128 | d >> 6 & 15 | (c & 3) << 4)) & 0xFF];\n                C = C >>> 8 ^ T0[(C ^ (128 | d & 63)) & 0xFF];\n            } else {\n                C = C >>> 8 ^ T0[(C ^ (224 | c >> 12 & 15)) & 0xFF];\n                C = C >>> 8 ^ T0[(C ^ (128 | c >> 6 & 63)) & 0xFF];\n                C = C >>> 8 ^ T0[(C ^ (128 | c & 63)) & 0xFF];\n            }\n        }\n        return ~C;\n    }\n    CRC32.table = T0;\n    // $FlowIgnore\n    CRC32.bstr = crc32_bstr;\n    // $FlowIgnore\n    CRC32.buf = crc32_buf;\n    // $FlowIgnore\n    CRC32.str = crc32_str;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/crc-32/crc32.js\n");

/***/ })

};
;